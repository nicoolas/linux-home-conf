#set-option -g visual-bell on
#set-option -g bell-action any
#setw -g mode-mouse on
#set -g mouse-select-pane on
#setw -g automatic-rename

#FIX: http://tmux.svn.sourceforge.net/viewvc/tmux/trunk/FAQ
# vim displays reverse video instead of italics, while less displays italics
#  (or just regular text) instead of reverse. What's wrong?
#set -g default-terminal "screen-it"
#

run-shell "tmux setenv -g TMUX_VERSION $(tmux -V | cut -c 6-)"
if-shell '[ "$(echo ${TMUX_VERSION} < 2.1 | bc)" = 1 ]' 'setenv -g TMUX_VERSION_OLD "true"' 'setenv -g TMUX_VERSION_OLD "false"'
run-shell "tmux setenv -g TMUX_SSH_REMOTE \"$(echo $SSH_CONNECTION | cut -d ' ' -f1)\""
if-shell 'test -n "$TMUX_SSH_REMOTE"' 'setenv -g TMUX_SSH_REMOTE_DISP " #[fg=yellow][$TMUX_SSH_REMOTE]#[default]"'
bind v display-message  "[remote:$TMUX_SSH_REMOTE][version:$TMUX_VERSION][old:$TMUX_VERSION_OLD]"

set -s escape-time 0
setw -g mode-keys vi
set -g history-limit 1000
set -g display-time 8000 # milliseconds

set -g prefix C-x
bind -n C-a send-prefix

# ZSH if you can
if-shell 'which zsh' 'set -g default-shell /bin/zsh' 'set -g default-shell /bin/bash'

# when printing pane ids (bind q)
set -g display-panes-time 4000 # 4 secs

unbind A
bind A command-prompt "rename-window %%"
set-option -g allow-rename off

## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##
### ## Buffers
bind  u copy-mode 
bind  i paste-buffer -s \015 
bind  > loadb /tmp/screen-exchange
bind  < saveb /tmp/screen-exchange

#paste-buffer
#bind C-v command-prompt "saveb /opt/screen/scbuf.tmp \; loadb /opt/screen/scbuf.%% \; paste-buffer \; loadb /opt/screen/scbuf.tmp "
#bind C-c command-prompt "saveb /opt/screen/scbuf.%%"

# Reload configuration
bind r source-file ~/.tmux.conf \; display-message "Tmux conf reloaded"

## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##
## ## Display info
unbind *
bind * list-clients

## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##
## ## Windows & Panes

unbind M-PPage
unbind M-NPage
bind -n M-PPage previous-window
bind -n M-NPage next-window
#bind -n C-Left previous-window
#bind -n C-Right next-window
bind -n C-b previous-window
bind -n C-n next-window
# Useful for nested sessions
unbind n
unbind b
bind n next-window
bind b previous-window

# Split window (h or v) directly in current directory
unbind C-o
bind C-o command-prompt -p "Split Direction (v/h):"  "split-window -c '#{pane_current_path}' -%%"
unbind C-c
bind C-c new-window -c '#{pane_current_path}'
# Copy current directory path into buffer
unbind C-p
bind C-p display-message "#{pane_current_path}" \; run 'tmux set-buffer \"#{pane_current_path}\"'

unbind M-Up
unbind M-Down
unbind M-Left
unbind M-Right
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R

# Split windows
unbind |
unbind S
bind | split-window -h
bind S split-window -v 
bind -n C-IC new-window 
bind C-x last-window


# use the vim resize keys.
# # the number at the end is how much the pane will be resized,
# # and 1 is fairly small -- you might want to tweak this.
bind -n M-< resize-pane -L 1
bind -n M-> resize-pane -R 1
bind -n M-- resize-pane -D 1
bind -n M-+ resize-pane -U 1
#
# pane movement
bind j join-pane
bind J command-prompt -p "join pane from:"  "join-pane -s '%%'"

unbind k
bind k confirm-before "kill-window"

unbind l
bind l refresh-client

#Aggressive Resize
# By default, all windows in a session are constrained to the size of the
# smallest client connected to that session, even if both clients are looking 
# at different windows. It seems that in this particular case, Screen has the 
# better default where a window is only constrained in size if a 
# smaller client is actively looking at it. This behaviour can be fixed by 
# setting tmux's aggressive-resize option.
#setw -g aggressive-resize on

## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##
### ## Zooming
unbind +
unbind -
bind + new-window -d -n tmux-zoom 'read foo' \; swap-pane -s tmux-zoom.0 \; select-window -t tmux-zoom
bind - last-window \; swap-pane -s tmux-zoom.0 \; kill-window -t tmux-zoom

## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ## ##
### ## Appearance & themes 
# Set status bar
set -g status-left-length 32
set -g status-right-length 150

set -g status-fg white
set -g status-bg black

set -g window-status-activity-attr bold
set -g pane-border-fg colour245 # grey
set -g pane-active-border-fg blue
set -g message-fg black
set -g message-bg colour208 # orange
set -g message-attr bold

set -g status-left '#[fg=white]#S> '
set -g status-left '#[fg=yellow]#{=12:host} #[fg=white][#[fg=yellow]#S#[fg=white]]#[default] '
set -g status-right '#[default]#[fg=white] #(whoami)@#H -#{TMUX_SSH_REMOTE_DISP} V#{TMUX_VERSION} #[fg=yellow]%H:%M#[default]'
set -g window-status-format "#[fg=white]#[reverse]#I#{?window_zoomed_flag,^#[noreverse],#[noreverse]-}#W#[default]"
set -g window-status-current-format '#[bold,reverse,fg=white]#I#{?window_zoomed_flag,^, }#W#[nobold,noreverse]'

# Highlight active window
#set-window-option -g window-status-current-bg red

# https://github.com/samoshkin/tmux-config
# https://github.com/samoshkin/tmux-config/blob/master/tmux/tmux.conf

# Session is considered to be remote when we ssh into host
#if-shell \
#    'test -n "$SSH_CLIENT" && test -r ~/.tmux.remote.conf' \
#	'source-file ~/.tmux.remote.conf'

# We want to have single prefix key "C-a", usable both for local and remote session
# we don't want to "C-a" + "a" approach either
# Idea is to turn off all key bindings and prefix handling on local session,
# so that all keystrokes are passed to inner/remote session

# see: toggle on/off all keybindings · Issue #237 · tmux/tmux - https://github.com/tmux/tmux/issues/237

# %if ... %elif ... %endif -> not available in tmux 1.9

# Also, change some visual styles when window keys are off
if-shell -b '[ "$TMUX_VERSION_OLD" != "true" ]' \
'bind -T root F12  \
  set prefix None \;\
  set key-table off \;\
  set status-bg colour017 \;\
  bind -T off -n C-Left previous-window \;\
  bind -T off -n C-Right next-window \;\
  if -F "#{pane_in_mode}" "send-keys -X cancel" \;\
  refresh-client -S'

if-shell -b '[ "$TMUX_VERSION_OLD" != "true" ]' \
'bind -T off F12 \
  set -u prefix \;\
  set -u key-table \;\
  set -u status-bg \;\
  set status-bg black \;\
  refresh-client -S'
